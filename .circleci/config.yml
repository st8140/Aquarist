# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
orbs:
  ruby-orbs: sue445/ruby-orbs@1.6.0
  heroku: circleci/heroku@1.0.1

workflows:
  build_test_and_deploy:
    jobs:
      - build
      - rubocop:
          requires: 
            - build
      - rspec:
          requires:
            - build
            - rubocop
      - deploy_prd:
          requires:
            - build
            - rspec
          filters:
            branches:
              only:
                - master
      - deploy_stg:
          requires:
            - build
            - rspec
          filters:
            branches:
              only:
                - staging

executors:
  default:
    working_directory: ~/repo
    docker:
      - image: ruby:2.5.0-stretch
        environment:
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test

jobs:
  build:
    executor: default
    steps:
      - checkout
      - run:
          name: Chrome Driver Install
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt-get update && sudo apt-get install -y unzip
            wget -N http://chromedriver.storage.googleapis.com/87.0.4280.88/chromedriver_linux64.zip -P ~/
            unzip ~/chromedriver_linux64.zip -d ~/
            rm ~/chromedriver_linux64.zip
            sudo chown root:root ~/chromedriver
            sudo chmod 755 ~/chromedriver
            sudo mv ~/chromedriver /usr/bin/chromedriver
            sh -c 'wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -'
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update && sudo apt-get install -y google-chrome-stable
          background: true

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - restore_cache:
          keys:
            - rails-yarn-{{ checksum "yarn.lock" }}
            - rails-yarn-
      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.1.4
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - save_cache:
          key: rails-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run:
          name: yarn install
          command: yarn install --cache-folder ~/.cache/yarn
      - run:
          name: webpack install
          command: bundle exec bin/webpack
      - run: mv config/database.yml.ci config/database.yml

  rubocop:
    executor: default
    steps:
      - preparate
      - run:
          name: Rubocop
          command: bundle exec rubocop

  rspec:
    executor: default
    steps:
      - preparate
      - run: bundle exec rails db:create
      - run: bundle exec rails db:schema:load
      - run:
          name: Rspec
          command: bundle exec rspec
  deploy_prd:
    executor: heroku/default
    parameters:
      app-name: 
        default: $HEROKU_APP_NAME_PRD
        type: string
      post-deploy:
        default:
          - run:
              command: heroku run rails db:migrate --app $HEROKU_APP_NAME_PRD
        type: steps
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git:
          app-name: << parameters.app-name >>
      - steps: << parameters.post-deploy >>
  deploy_stg:
    executor: heroku/default
    parameters:
      app-name: 
        default: $HEROKU_APP_NAME_STG
        type: string
      post-deploy:
        default:
          - run:
              command: heroku run rails db:migrate --app $HEROKU_APP_NAME_STG
        type: steps
      force:
        default: true
        type: boolean
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git:
          app-name: << parameters.app-name >>
      - steps: << parameters.post-deploy >>

commands:
  bundle-install:
    steps:
      - ruby-orbs/bundle-install:
          bundle_clean: true
          bundle_extra_args: ''
          bundle_gemfile: Gemfile
          bundle_jobs: 4
          bundle_path: vendor/bundle
          bundle_retry: 3
          cache_key_prefix: v1-bundle-dependencies
          restore_bundled_with: true
  preparate:
    steps:
      - checkout
      - bundle-install
